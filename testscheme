(define (test1) (certificate			; Should return #T
	' (     (1 1 1 0930 1030)
                (2 3 1 1200 1315)
                (3 2 2 1400 1630)
                (4 1 1 1100 1230)
                (5 1 1 1545 1700) ) ))

(define (test2) (certificate			; Should return #F - overlap
	' (     (1 1 1 0930 1030)
                (6 1 1 1200 1315)
                (3 2 2 1400 1630)
                (4 1 1 1100 1230)
                (5 1 1 1545 1700) ) ))

(define (test3) (certificate			; Should return #F - credits
	' (     (1 1 1 0930 1030)
                (2 3 1 1200 1315)
                (3 2 2 1400 1630) ) ))

(define (test4) (certificate			; Should return #F -
						; too few credits & overlap
	' (     (1 1 1 0930 1030)		
                (2 1 1 0900 1000)
                (3 2 2 1400 1630) ) ))

(define (test5) (certificate			; Should return #F - overlap
	' (     (1 1 1 0930 1030)
                (3 2 2 1400 1630)
                (4 1 1 1100 1230)
                (6 1 1 1200 1315)
                (5 1 1 1545 1700) ) ))

(define (test6) (certificate			; Should return #F - overlap
	' (     (1 1 1 0930 1030)
                (2 3 1 1200 1315)
                (3 2 2 1400 1630)
                (4 1 1 0930 1030)
                (5 1 1 1545 1700) ) ))

(define (test7) (certificate			; Should return #F - overlap
	' (     (1 1 2 0900 1100)
                (2 1 1 1000 1030)
                (3 2 2 1400 1630)
                (5 1 2 1500 1700) ) ))

(define (test8) (certificate			; Should return #T
	' (     (15 1 1 0930 1030)
                (9  3 1 1200 1315)
                (4  2 1 1400 1630)
                (17 1 1 1100 1230)
                (3  1 1 1545 1700) ) ))

(define (test9) (certificate			; Should return #T
	' (     (16 1 1 0930 1030)
                (12 3 1 1200 1315)
                (18 2 1 1400 1630)
                (11 1 1 1100 1230)
                (15 1 1 1545 1700)
		(6  3 1 1400 1500)
		(17 2 2 0800 1000) ) ))

(define (testall) 				; Should return #T
	(and	(test1)
		(not (test2))
		(not (test3))
		(not (test4))
		(not (test5))
		(not (test6))
		(not (test7))
		(test8)
		(test9)))
